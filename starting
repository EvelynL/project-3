//// Project 3, Evelyn Pool table With Objects

//Globals:pool table, balls, bird,mouse
Ball a, n, g, b, y;
Buttons reset, rwall, bird, rat;

String title=  "Pool Table with objects";
String news=   "Use 'r' key to reset.";
String author=  "Evelyn Levine";


int tableRed=70, tableGreen=240, tableBlue=100;                            // pool table color
float left=50, right=450, top=100, bottom=250;                                // Table boundaries
float middle=250;
boolean wall=true;

void setup() {
  size( 700, 500 );                                                           //window size
  left=   50;
  right=  width-50;
  top=    100;
  bottom= height-80;
  middle= left + (right-left) / 2;
  
  //creating balls.
  a= new Ball( width/8, height/2, color (255),0,0);                                    // cue ball
  a.name= "0";
  n= new Ball( color (255,0,0), random( middle+25, right), random (top, bottom) );     // red ball
  n.name= "1";
  g= new Ball( color (0,255,0), random( middle+25, right), random (top, bottom) );     // green ball
  g.name= "2";
  b= new Ball( color (0,0,255), random( middle+25, right), random (top, bottom) );     // blue ball
  b.name= "3";
  y= new Ball( color (255,255,0), random( middle+25, right), random (top, bottom) );   // yellow ball 
  y.name= "4";
  
  //creating buttons, and name.
 
  reset = new Buttons( 70,15,60,30);
  reset.name= "RESET";
  rwall = new Buttons( 190,15,60,30);
  rwall.name= "WALL";
  bird  = new Buttons(290,15,60,30);
  bird.name= "BIRDS";
  rat   = new Buttons( 390,15,60,30);
  rat.name= "RAT";
  
  reset();

}


void reset() {
  a.reset();
  n.reset();
  g.reset();
  b.reset();
  y.reset();
  
}
  

    
void draw() {
  background( 250,250,200 );                                                 //background color
  table( left, top, right, bottom );

  ball();
  buttons();
}


void table( float east, float north, float west, float south ) {
  rectMode( CORNERS );
  fill( tableRed, tableGreen, tableBlue );    // pool table
  strokeWeight(20);
  stroke( 0, 153,0 );   
  rect( east-20, north-20, west+20, south+20 );
  
  // Start with a WALL down the middle of the table! 
  if (wall) {
    float middle=  (east+west)/2;    
    stroke(0,0,30);
    line( middle,north+10, middle,south-10 );
  }
  stroke(0);
  strokeWeight(1);
 
}




void ball() { 
  a.show();
  n.show();
  g.show();
  b.show();
  y.show();
  
  a.move();
  n.move();
  g.move();
  b.move();
  y.move();
  
  //// Elastic collisions.
  collision( a,n);
  collision( a,g);
  collision( a,b);
  collision( a,y);
  
  collision( n,g);
  collision( n,b);
  collision( n,y);
  
  collision( g,b);
  collision( g,y);
 
  collision( b,y);
} 

void collision( Ball p, Ball q ) {
 if ( p.hit( q.x,q.y ) ) {
    float tmp;
    tmp=p.dx;  p.dx=q.dx;  q.dx=tmp;      // Swap the velocities.
    tmp=p.dy;  p.dy=q.dy;  q.dy=tmp;
    p.move();  p.move();   p.move();
    q.move();  q.move();   q.move();
  }
}

//// HANDLERS:  keys, click
void keyPressed() {
  if( key == 'r') {
    reset();
  }
}


void buttons() {
//  reset.show();
 // rwall.show();
//  bird.show();
//  rat.show();
}


class Buttons {
  int mx, my, l, w;              //buttons centerx , centery , length , width.
  String name="";
  
 Buttons( int templ, int tempr, int tempt, int tempb) {
  mx=templ;
  my=tempr;
  l=tempt;
  w=tempb;
}

void show() {
  fill(0,0,0,30);
  rectMode(CENTER);
  rect( mx, my, l, w);
  textSize(14);
  text( name, mx-20, my+5);
 }

}





class Ball {
  int c;
  float x, y;
  float dx=random(1,3), dy=random(1,3);
  String name="";
  
Ball( float tempx, float tempy, color tempc, float tempdx, float tempdy) {
  c=tempc;
  x=tempx;
  y=tempy;
  dy=tempdy;
  dx=tempdx;
  
} 
Ball( color tempc, float tempx, float tempy) {
  c=tempc;
  x=tempx;
  y=tempy;
 
}
  
 void show() {
   fill(c);
   ellipse( x, y, 30,30);
   fill(0);
   textSize(15);
   text( name, x-5, y+5);
   
 }
 
 void move() {
  x = x + dx;
  y = y + dy;
  // bounce off wall
  if ( x < middle+25 || x > right ) dx *= -1;
  if ( y < top || y > bottom )      dy *= -1;
 }
 void move2() { 
   if (wall=!wall) { 
    middle=left-20;
   }


 
}
 void reset() {
    x=  random(middle+25, right );
    y=  random( top, bottom );
    dx=  random( 1,3 );
    dy=  random( 1,3 );
    wall= true;
    middle= 355;


  }
  boolean hit( float x, float y ) {
    if (  dist( x,y, this.x,this.y ) < 30 ) return true;
    else return false;
  }
 
 void mousePressed() {
   if (dist ( x, y, mouseX, mouseY) <30) {
     x=  random( 390,right );     
     y=  random( top, bottom );
     dx=  random( 1,3 );    
     dy=  random( 1,3 );
   }

 }
  
}

void messages() {
  fill(0,0,0);
  text( title, width/4, 20 );
  text( news, width/4, 40 );
  text( author, 10, height-10 );
}
